// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/Azure/moby-packaging/pkg/archive

package archive

#PkgKind: string // #enumPkgKind

#enumPkgKind:
	#PkgKindDeb |
	#PkgKindRPM |
	#PkgKindWin

#PkgAction: string // #enumPkgAction

#enumPkgAction:
	#PkgActionPreRemoval |
	#PkgActionPostRemoval |
	#PkgActionPostInstall |
	#PkgActionUpgrade

#PkgKindDeb: #PkgKind & "deb"
#PkgKindRPM: #PkgKind & "rpm"
#PkgKindWin: #PkgKind & "win"

_#flagPostInstall:     "--after-install"
_#flagUpgrade:         "--after-upgrade"
_#flagPreRm:           "--before-remove"
_#flagPostRm:          "--after-remove"
_#filenamePostInstall: "postinst"
_#filenamePostUpgrade: "postup"
_#filenamePreRm:       "prerm"
_#filenamePostRm:      "postrm"

#PkgActionPreRemoval:  #PkgAction & "prerm"
#PkgActionPostRemoval: #PkgAction & "postrm"
#PkgActionPostInstall: #PkgAction & "postinstall"
#PkgActionUpgrade:     #PkgAction & "upgrade"

#InstallScript: {
	when:   #PkgAction @go(When)
	script: string     @go(Script)
}

#Archive: {
	name:    string @go(Name)
	kind:    string @go(Kind)
	distro:  string @go(Distro)
	webpage: string @go(Webpage)
	files: [...#File] @go(Files,[]File)
	systemd: [...#Systemd] @go(Systemd,[]Systemd)

	// required for debian dependency resolution
	binaries: [...string] @go(Binaries,[]string)
	recommends: [...string] @go(Recommends,[]string)
	suggests: [...string] @go(Suggests,[]string)
	conflicts: [...string] @go(Conflicts,[]string)
	replaces: [...string] @go(Replaces,[]string)
	provides: [...string] @go(Provides,[]string)
	buildDeps: [...string] @go(BuildDeps,[]string)
	runtimeDeps: [...string] @go(RuntimeDeps,[]string)
	installScripts: [...#InstallScript] @go(InstallScripts,[]InstallScript)
	description: string @go(Description)
}
